name: Extract Data from GFF3 Change and Update Alias File

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  extract-data:
    if: github.event.pull_request.additions == 1 && github.event.pull_request.deletions == 1 && github.event.pull_request.changed_files == 1
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code (full history)
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Extract changed line
        id: extract
        run: |
          git fetch origin ${{ github.base_ref }}
          DIFF=$(git diff origin/${{ github.base_ref }} ${{ github.event.pull_request.head.sha }})
          ADDED_LINE=$(echo "$DIFF" | grep '^+[^+#]' | head -n 1 | sed 's/^+//')
          echo "added_line=$ADDED_LINE" >> $GITHUB_OUTPUT

      - name: Extract gene_id and name
        id: attributes
        run: |
          ADDED_LINE="${{ steps.extract.outputs.added_line }}"
          GENE_ID=$(echo "$ADDED_LINE" | awk -F'\t' '{split($9, a, ";"); for(i in a) { if (a[i] ~ /gene_id=/) { sub(/gene_id=/, "", a[i]); print a[i]; } }}')
          NAME=$(echo "$ADDED_LINE" | awk -F'\t' '{split($9, a, ";"); for(i in a) { if (a[i] ~ /name=/) { sub(/name=/, "", a[i]); print a[i]; } }}')

          # Check if name is missing
          if [ -z "$NAME" ]; then
            echo "Error: 'name' attribute is missing in the GFF3 line."
            exit 1
          fi

          echo "gene_id=$GENE_ID" >> $GITHUB_OUTPUT
          echo "name=$NAME" >> $GITHUB_OUTPUT

      - name: Get GitHub username
        id: username
        if: steps.attributes.outcome == 'success'
        run: |
          USERNAME=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/user" | jq -r '.login')
          echo "username=$USERNAME" >> $GITHUB_OUTPUT
          
      - name: Extract annotator or use GitHub username
        id: annotator
        if: steps.attributes.outcome == 'success'
        run: |
          ADDED_LINE="${{ steps.extract.outputs.added_line }}"
          ANNOTATOR=$(echo "$ADDED_LINE" | awk -F'\t' '{split($9, a, ";"); for(i in a) { if (a[i] ~ /annotator=/) { sub(/annotator=/, "", a[i]); print a[i]; } }}')
          
          # Use GitHub username if annotator is missing
          if [ -z "$ANNOTATOR" ]; then
            ANNOTATOR="${{ steps.username.outputs.username }}"
          fi
          
          echo "annotator=$ANNOTATOR" >> $GITHUB_OUTPUT

      - name: Get PR creation date
        id: pr-date
        if: steps.attributes.outcome == 'success'
        run: |
          PR_DATE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }}" | jq -r '.created_at')
          echo "pr_date=$PR_DATE" >> $GITHUB_OUTPUT

      - name: Update gene_alias.tsv
        if: steps.attributes.outcome == 'success'
        run: |
          echo -e "${{ steps.attributes.outputs.gene_id }}\t${{ steps.attributes.outputs.name }}\t${{ steps.annotator.outputs.annotator }}\t${{ steps.pr-date.outputs.pr_date }}" >> gene_alias.tsv

      - name: Commit and push changes
        if: steps.attributes.outcome == 'success'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update gene_alias.tsv with new entry"
          branch: ${{ github.head_ref }}
          file_pattern: gene_alias.tsv